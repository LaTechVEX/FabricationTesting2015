#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, I2C_1,  ,               sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Motor,  port1,           encodemotor,   tmotorVex393_HBridge, PIDControl, reversed, driveRight, encoderPort, I2C_1)
#pragma config(Motor,  port2,           motor1,        tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,           motor2,        tmotorVex393_MC29, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

float n=40; //define n as 
float nd=0.01;
float encode1;
float encode2;
float encode3;
float encode4;
float cpm;
float rpm;
float cpm2;
float rpm2;
task main()
{
	clearLCDLine(0);                      // Clear line 1 (0) of the LCD
	clearLCDLine(1);                      // Clear line 2 (1) of the LCD

	bLCDBacklight = true;                 // Turn on LCD Backlight
	while (1==1){
	//	if(vexRT[Btn6U] == 1){
			n = 100;
			motor[port2] = n;
			motor[port9] = n;
			wait1Msec(200);
			n = 40;
			while(n<=127){

				motor[port2] = n;
				motor[port9] = n;
				encode1 = nMotorEncoder[port2];
				encode3 = nMotorEncoder[port9];
				wait1Msec(5);
				n = n+nd;
				encode2 = nMotorEncoder[port2];
				encode4 = nMotorEncoder[port9];
				cpm = (encode2-encode1)/0.005*60*.1 + .9*cpm;
				rpm = cpm/600;
				cpm2 = (encode4-encode3)/0.005*60*.1 + .9*cpm2;
				rpm2 = cpm2/600;
				clearLCDLine(0);
				displayLCDPos(0,0);
				displayNextLCDNumber(rpm);
				clearLCDLine(1);
				displayLCDPos(1,0);
				displayNextLCDNumber(rpm2);
		} 
		}
		if(vexRT[Btn6D] == 1){
			while(n>0){
				motor[port2] = n;
				motor[port9] = n;
				encode1 = nMotorEncoder[port2];
				encode3 = nMotorEncoder[port9];
				wait1Msec(5);
				n = n-nd;
				encode2 = nMotorEncoder[port2];
				encode4 = nMotorEncoder[port9];
				cpm = (encode2-encode1)/0.005*60*.1 + .9*cpm;
				rpm = cpm/600;
				cpm2 = (encode4-encode3)/0.005*60*.1 + .9*cpm2;
				rpm2 = cpm2/600;
				clearLCDLine(0);
				displayLCDPos(0,0);
				displayNextLCDNumber(rpm);
				clearLCDLine(1);
				displayLCDPos(1,0);
				displayNextLCDNumber(rpm2);
		}}
		else{
			motor[port2] = 0;
			motor[port3] = 0;
		}
	}
	 //}